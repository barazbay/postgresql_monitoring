  # https://github.com/percona/postgres_exporter/blob/master/queries.yaml
pg_replication:
  query: "SELECT EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp())) as lag"
  metrics:
    - lag: "Replication lag behind master in seconds"
pg_postmaster:
  query: "SELECT pg_postmaster_start_time as start_time_seconds from pg_postmaster_start_time()"
  metrics:
    - start_time_seconds: "Time at which postmaster started"
pg_stat_user_tables:
  query: "SELECT schemaname, relname, seq_scan, seq_tup_read, idx_scan, idx_tup_fetch, n_tup_ins, n_tup_upd, n_tup_del, n_tup_hot_upd, n_live_tup, n_dead_tup, n_mod_since_analyze, last_vacuum, last_autovacuum, last_analyze, last_autoanalyze, vacuum_count, autovacuum_count, analyze_count, autoanalyze_count FROM pg_stat_user_tables"
  metrics:
    - schemaname: "Name of the schema that this table is in"
    - relname: "Name of this table"
    - seq_scan: "Number of sequential scans initiated on this table"
    - seq_tup_read: "Number of live rows fetched by sequential scans"
    - idx_scan: "Number of index scans initiated on this table"
    - idx_tup_fetch: "Number of live rows fetched by index scans"
    - n_tup_ins: "Number of rows inserted"
    - n_tup_upd: "Number of rows updated"
    - n_tup_del: "Number of rows deleted"
    - n_tup_hot_upd: "Number of rows HOT updated (i.e., with no separate index update required)"
    - n_live_tup: "Estimated number of live rows"
    - n_dead_tup: "Estimated number of dead rows"
    - n_mod_since_analyze: "Estimated number of rows changed since last analyze"
    - last_vacuum: "Last time at which this table was manually vacuumed (not counting VACUUM FULL)"
    - last_autovacuum: "Last time at which this table was vacuumed by the autovacuum daemon"
    - last_analyze: "Last time at which this table was manually analyzed"
    - last_autoanalyze: "Last time at which this table was analyzed by the autovacuum daemon"
    - vacuum_count: "Number of times this table has been manually vacuumed (not counting VACUUM FULL)"
    - autovacuum_count: "Number of times this table has been vacuumed by the autovacuum daemon"
    - analyze_count: "Number of times this table has been manually analyzed"
    - autoanalyze_count: "Number of times this table has been analyzed by the autovacuum daemon"
pg_statio_user_tables:
  query: "SELECT schemaname, relname, heap_blks_read, heap_blks_hit, idx_blks_read, idx_blks_hit, toast_blks_read, toast_blks_hit, tidx_blks_read, tidx_blks_hit FROM pg_statio_user_tables"
  metrics:
    - schemaname: "Name of the schema that this table is in"
    - relname: "Name of this table"
    - heap_blks_read: "Number of disk blocks read from this table"
    - heap_blks_hit: "Number of buffer hits in this table"
    - idx_blks_read: "Number of disk blocks read from all indexes on this table"
    - idx_blks_hit: "Number of buffer hits in all indexes on this table"
    - toast_blks_read: "Number of disk blocks read from this table's TOAST table (if any)"
    - toast_blks_hit: "Number of buffer hits in this table's TOAST table (if any)"
    - tidx_blks_read: "Number of disk blocks read from this table's TOAST table indexes (if any)"
    - tidx_blks_hit: "Number of buffer hits in this table's TOAST table indexes (if any)"
pg_database:
  query: " SELECT pg_database.datname, pg_database_size(pg_database.datname) as size FROM pg_database"
  metrics:
    - datname: "Name of the database"
    - size: "Disk space used by the database"
pg_stat_statements:
  query: "SELECT
            pg_get_userbyid(userid) as user,
            pg_database.datname,
            pg_stat_statements.queryid,
            pg_stat_statements.query,
            pg_stat_statements.calls,
            pg_stat_statements.total_time as time_milliseconds,
            pg_stat_statements.rows,
            pg_stat_statements.shared_blks_hit,
            pg_stat_statements.shared_blks_read,
            pg_stat_statements.shared_blks_dirtied,
            pg_stat_statements.shared_blks_written,
            pg_stat_statements.local_blks_hit,
            pg_stat_statements.local_blks_read,
            pg_stat_statements.local_blks_dirtied,
            pg_stat_statements.local_blks_written,
            pg_stat_statements.temp_blks_read,
            pg_stat_statements.temp_blks_written,
            pg_stat_statements.blk_read_time,
            pg_stat_statements.blk_write_time
          FROM pg_stat_statements
          JOIN pg_database
          ON pg_database.oid = pg_stat_statements.dbid"
  metrics:
    - user: "The user who executed the statement"
    - datname: "The database in which the statement was executed"
    - queryid: "Internal hash code, computed from the statement's parse tree"
    - query: "Processed query"
    - calls: "Number of times executed"
    - time_milliseconds: "Total time spent in the statement, in milliseconds"
    - rows: "Total number of rows retrieved or affected by the statement"
    - shared_blks_hit: "Total number of shared block cache hits by the statement"
    - shared_blks_read: "Total number of shared blocks read by the statement"
    - shared_blks_dirtied: "Total number of shared blocks dirtied by the statement"
    - shared_blks_written: "Total number of shared blocks written by the statement"
    - local_blks_hit: "Total number of local block cache hits by the statement"